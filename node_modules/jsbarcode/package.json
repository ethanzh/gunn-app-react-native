{
  "_args": [
    [
      {
        "raw": "jsbarcode@^3.8.0",
        "scope": null,
        "escapedName": "jsbarcode",
        "name": "jsbarcode",
        "rawSpec": "^3.8.0",
        "spec": ">=3.8.0 <4.0.0",
        "type": "range"
      },
      "/Users/ethanzh/Desktop/gunn-app/node_modules/react-native-barcode-builder"
    ]
  ],
  "_from": "jsbarcode@>=3.8.0 <4.0.0",
  "_id": "jsbarcode@3.8.0",
  "_inCache": true,
  "_location": "/jsbarcode",
  "_nodeVersion": "6.10.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/jsbarcode-3.8.0.tgz_1495814055360_0.6384933565277606"
  },
  "_npmUser": {
    "name": "lindell",
    "email": "johan@lindell.me"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jsbarcode@^3.8.0",
    "scope": null,
    "escapedName": "jsbarcode",
    "name": "jsbarcode",
    "rawSpec": "^3.8.0",
    "spec": ">=3.8.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-native-barcode-builder"
  ],
  "_resolved": "https://registry.npmjs.org/jsbarcode/-/jsbarcode-3.8.0.tgz",
  "_shasum": "a290379a7449fb927f26d26b319c24bf2debc8fc",
  "_shrinkwrap": null,
  "_spec": "jsbarcode@^3.8.0",
  "_where": "/Users/ethanzh/Desktop/gunn-app/node_modules/react-native-barcode-builder",
  "author": {
    "name": "Johan Lindell"
  },
  "bin": {
    "barcodes": "bin/barcodes",
    "Barcode.js": "bin/barcodes/Barcode.js",
    "codabar": "bin/barcodes/codabar",
    "index.js": "bin/renderers/index.js",
    "CODE128": "bin/barcodes/CODE128",
    "auto.js": "bin/barcodes/CODE128/auto.js",
    "CODE128_AUTO.js": "bin/barcodes/CODE128/CODE128_AUTO.js",
    "CODE128.js": "bin/barcodes/CODE128/CODE128.js",
    "CODE128A.js": "bin/barcodes/CODE128/CODE128A.js",
    "CODE128B.js": "bin/barcodes/CODE128/CODE128B.js",
    "CODE128C.js": "bin/barcodes/CODE128/CODE128C.js",
    "constants.js": "bin/barcodes/CODE128/constants.js",
    "CODE39": "bin/barcodes/CODE39",
    "EAN_UPC": "bin/barcodes/EAN_UPC",
    "ean_encoder.js": "bin/barcodes/EAN_UPC/ean_encoder.js",
    "EAN13.js": "bin/barcodes/EAN_UPC/EAN13.js",
    "EAN2.js": "bin/barcodes/EAN_UPC/EAN2.js",
    "EAN5.js": "bin/barcodes/EAN_UPC/EAN5.js",
    "EAN8.js": "bin/barcodes/EAN_UPC/EAN8.js",
    "UPC.js": "bin/barcodes/EAN_UPC/UPC.js",
    "UPCE.js": "bin/barcodes/EAN_UPC/UPCE.js",
    "GenericBarcode": "bin/barcodes/GenericBarcode",
    "index.tmp.js": "bin/barcodes/index.tmp.js",
    "ITF": "bin/barcodes/ITF",
    "ITF14": "bin/barcodes/ITF14",
    "MSI": "bin/barcodes/MSI",
    "checksums.js": "bin/barcodes/MSI/checksums.js",
    "MSI.js": "bin/barcodes/MSI/MSI.js",
    "MSI10.js": "bin/barcodes/MSI/MSI10.js",
    "MSI1010.js": "bin/barcodes/MSI/MSI1010.js",
    "MSI11.js": "bin/barcodes/MSI/MSI11.js",
    "MSI1110.js": "bin/barcodes/MSI/MSI1110.js",
    "pharmacode": "bin/barcodes/pharmacode",
    "exceptions": "bin/exceptions",
    "ErrorHandler.js": "bin/exceptions/ErrorHandler.js",
    "exceptions.js": "bin/exceptions/exceptions.js",
    "help": "bin/help",
    "fixOptions.js": "bin/help/fixOptions.js",
    "getOptionsFromElement.js": "bin/help/getOptionsFromElement.js",
    "getRenderProperties.js": "bin/help/getRenderProperties.js",
    "linearizeEncodings.js": "bin/help/linearizeEncodings.js",
    "merge.js": "bin/help/merge.js",
    "optionsFromStrings.js": "bin/help/optionsFromStrings.js",
    "JsBarcode.js": "bin/JsBarcode.js",
    "options": "bin/options",
    "defaults.js": "bin/options/defaults.js",
    "renderers": "bin/renderers",
    "canvas.js": "bin/renderers/canvas.js",
    "object.js": "bin/renderers/object.js",
    "shared.js": "bin/renderers/shared.js",
    "svg.js": "bin/renderers/svg.js"
  },
  "bugs": {
    "url": "https://github.com/lindell/JsBarcode/issues"
  },
  "config": {
    "blanket": {
      "pattern": [
        "JsBarcode.js",
        "barcodes"
      ],
      "data-cover-never": [
        "GenericBarcode",
        "node_modules"
      ]
    }
  },
  "dependencies": {},
  "description": "JsBarcode is a customizable barcode generator with support for multiple barcode formats.",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-core": "^6.24.1",
    "babel-loader": "^7.0.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-stage-3": "6.24.1",
    "blanket": "^1.2.3",
    "canvas": "^1.6.5",
    "coveralls": "^2.11.6",
    "gulp": "^3.9.1",
    "gulp-babel": "^6.1.2",
    "gulp-bump": "^2.1.0",
    "gulp-clean": "^0.3.2",
    "gulp-concat": "^2.6.0",
    "gulp-eslint": "^3.0.1",
    "gulp-git": "^1.7.1",
    "gulp-header": "^1.7.1",
    "gulp-rename": "^1.2.2",
    "gulp-uglify": "^1.5.3",
    "gzip-size": "^3.0.0",
    "mocha": "^3.0.0",
    "mocha-lcov-reporter": "^1.2.0",
    "publish-release": "^1.2.0",
    "request": "^2.72.0",
    "run-sequence": "^1.1.5",
    "webpack": "^2.5.1",
    "webpack-stream": "^3.1.0",
    "xmldom": "^0.1.27"
  },
  "directories": {
    "example": "example",
    "test": "test",
    "lib": "src",
    "bin": "bin"
  },
  "dist": {
    "shasum": "a290379a7449fb927f26d26b319c24bf2debc8fc",
    "tarball": "https://registry.npmjs.org/jsbarcode/-/jsbarcode-3.8.0.tgz"
  },
  "gitHead": "08b588a0f2b1ea434d842d2094d3b4e1cdea7a38",
  "homepage": "https://github.com/lindell/JsBarcode#readme",
  "keywords": [
    "barcode",
    "canvas",
    "code128",
    "upc",
    "ean",
    "itf",
    "msi",
    "pharmacode"
  ],
  "license": "MIT",
  "main": "./bin/JsBarcode.js",
  "maintainers": [
    {
      "name": "lindell",
      "email": "johan@lindell.me"
    }
  ],
  "name": "jsbarcode",
  "optionalDependencies": {},
  "readme": "<p align=\"center\">\n\t<a href=\"http://lindell.me/JsBarcode\"><img src=\"http://lindell.me/JsBarcode/other/logo.svg\" alt=\"JsBarcode\"/></a>\n\t<br><br>\n\t<a href=\"https://gitter.im/lindell/JsBarcode?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"><img src=\"https://badges.gitter.im/lindell/JsBarcode.svg\" alt=\"Join the chat at https://gitter.im/lindell/JsBarcode\"/></a>\n\t<a href=\"http://travis-ci.org/lindell/JsBarcode\"><img src=\"https://secure.travis-ci.org/lindell/JsBarcode.svg\" alt=\"Build Status\"/></a>\n\t<a href=\"https://scrutinizer-ci.com/g/lindell/JsBarcode/?branch=master\"><img src=\"https://scrutinizer-ci.com/g/lindell/JsBarcode/badges/quality-score.png?b=master\" alt=\"Scrutinizer Code Quality\"/></a>\n\t<a href=\"http://packagequality.com/#?package=jsbarcode\"><img src=\"http://npm.packagequality.com/shield/jsbarcode.svg\" alt=\"Package Quality\"/></a>\n\t<a href=\"https://github.com/lindell/JsBarcode/blob/master/MIT-LICENSE.txt\"><img src=\"https://img.shields.io/badge/license-MIT-blue.svg\" alt=\"License\"/></a>\n</p>\n\nIntroduction\n----\n**JsBarcode** is a **barcode generator** written in JavaScript. It supports multiple barcode formats and works in browsers and with *Node.js*. It has *no dependencies* when it is used for the web but works with *jQuery* if you are into that.\n\n\n\nDemo\n----\n#### [Barcode Generator](http://lindell.github.io/JsBarcode/generator/)\n#### [Simple CodePen Demo](http://codepen.io/lindell/pen/eZKBdO?editors=1010)\n#### [Settings CodePen Demo](http://codepen.io/lindell/pen/mPvLXx?editors=1010)\n\nSupported barcodes:\n----\n* [CODE128](https://github.com/lindell/JsBarcode/wiki/CODE128)\n  * CODE128 (automatic mode switching)\n  * CODE128 A/B/C (force mode)\n* [EAN](https://github.com/lindell/JsBarcode/wiki/EAN)\n  * EAN-13\n  * EAN-8\n  * EAN-5\n  * EAN-2\n  * UPC (A)\n  * UPC (E)\n* [CODE39](https://github.com/lindell/JsBarcode/wiki/CODE39)\n* [ITF-14](https://github.com/lindell/JsBarcode/wiki/ITF-14)\n* [MSI](https://github.com/lindell/JsBarcode/wiki/MSI)\n  * MSI10\n  * MSI11\n  * MSI1010\n  * MSI1110\n* [Pharmacode](https://github.com/lindell/JsBarcode/wiki/pharmacode)\n* [Codabar](https://github.com/lindell/JsBarcode/wiki/codabar)\n\nExamples for browsers:\n----\n\n#### First create an canvas (or image)\n````html\n<svg id=\"barcode\"></svg>\n<!-- or -->\n<canvas id=\"canvas\"></canvas>\n<!-- or -->\n<img id=\"barcode\"/>\n````\n\n\n\n#### Simple example:\n````javascript\nJsBarcode(\"#barcode\", \"Hi!\");\n// or with jQuery\n$(\"#barcode\").JsBarcode(\"Hi!\");\n````\n\n##### Result:\n![Result](http://imgh.us/test_208.svg)\n\n\n#### Example with options:\n````javascript\nJsBarcode(\"#barcode\", \"1234\", {\n  format: \"pharmacode\",\n  lineColor: \"#0aa\",\n  width:4,\n  height:40,\n  displayValue: false\n});\n````\n##### Result:\n![Result](http://imgh.us/pharmacode.svg)\n\n\n#### More advanced use case:\n````javascript\nJsBarcode(\"#barcode\")\n  .options({font: \"OCR-B\"}) // Will affect all barcodes\n  .EAN13(\"1234567890128\", {fontSize: 18, textMargin: 0})\n  .blank(20) // Create space between the barcodes\n  .EAN5(\"12345\", {height: 85, textPosition: \"top\", fontSize: 16, marginTop: 15})\n  .render();\n````\n##### Result:\n![Result](http://i.imgur.com/pp2lvYe.png)\n\n\n\n#### Or define the value and options in the HTML element:\nUse any `jsbarcode-*` or `data-*` as attributes where `*` is any option.\n````html\n<svg class=\"barcode\"\n  jsbarcode-format=\"upc\"\n  jsbarcode-value=\"123456789012\"\n  jsbarcode-textmargin=\"0\"\n  jsbarcode-fontoptions=\"bold\">\n</svg>\n````\n\nAnd then initialize it with:\n````javascript\nJsBarcode(\".barcode\").init();\n````\n\n##### Result:\n![Result](http://imgh.us/upc.svg)\n\n\n\n#### Retrieve the barcode values so you can render it any way you'd like\nPass in an object which will be filled with data.\n```\nconst data = {};\nJsBarcode(data, 'text', {...options});\n```\ndata will be filled with a ``` encodings ``` property which has all the needed values.\nSee wiki for an example of what data looks like.\n\n\nSetup for browsers:\n----\n### Step 1:\nDownload or get the CDN link to the script:\n\n| Name | Supported barcodes | Size (gzip) | CDN / Download |\n|------|--------------------|:-----------:|---------------:|\n|  *All*  |  *All the barcodes!*  |  *9.6 kB*  |  *[JsBarcode.all.min.js][1]*  |\n|  CODE128  |  CODE128 (auto and force mode)  |  6 kB  |  [JsBarcode.code128.min.js][2]  |\n|  CODE39  |  CODE39  |  5 kB  |  [JsBarcode.code39.min.js][3]  |\n|  EAN / UPC  |  EAN-13, EAN-8, EAN-5, EAN-2, UPC (A)  |  6.2 kB  |  [JsBarcode.ean-upc.min.js][4]  |\n|  ITF-14  |  ITF-14  |  4.8 kB  |  [JsBarcode.itf-14.min.js][5]  |\n|  ITF  |  ITF  |  4.7 kB  |  [JsBarcode.itf.min.js][6]  |\n|  MSI  |  MSI, MSI10, MSI11, MSI1010, MSI1110  |  4.9 kB  |  [JsBarcode.msi.min.js][7]  |\n|  Pharmacode  |  Pharmacode  |  4.6 kB  |  [JsBarcode.pharmacode.min.js][8]  |\n|  Codabar  |  Codabar  |  4.8 kB  |  [JsBarcode.codabar.min.js][9]  |\n\n### Step 2:\nInclude the script in your code:\n\n\n````html\n<script src=\"JsBarcode.all.min.js\"></script>\n````\n\n### Step 3:\nYou are done! Go generate some barcodes :smile:\n\nBower and npm:\n----\nYou can also use [Bower](http://bower.io) or [npm](https://www.npmjs.com) to install and manage the library.\n````\nbower install jsbarcode --save\n````\n````\nnpm install jsbarcode --save\n````\n\nNode.js:\n----\n#### Install with npm:\n````\nnpm install jsbarcode\nnpm install canvas\n````\n\n#### Use:\n```` javascript\nvar JsBarcode = require('jsbarcode');\nvar Canvas = require(\"canvas\");\n\nvar canvas = new Canvas();\nJsBarcode(canvas, \"Hello\");\n\n// Do what you want with the canvas\n// See https://github.com/Automattic/node-canvas for more information\n````\n\n\n\nOptions:\n----\nFor information about how to use the options, see [the wiki page](https://github.com/lindell/JsBarcode/wiki/Options).\n\n| Option | Default value | Type |\n|--------|---------------|------|\n| [`format`](https://github.com/lindell/JsBarcode/wiki/Options#format) | `\"auto\" (CODE128)` | `String` |\n| [`width`](https://github.com/lindell/JsBarcode/wiki/Options#width) | `2` | `Number` |\n| [`height`](https://github.com/lindell/JsBarcode/wiki/Options#height) | `100` | `Number` |\n| [`displayValue`](https://github.com/lindell/JsBarcode/wiki/Options#display-value) | `true` | `Boolean` |\n| [`text`](https://github.com/lindell/JsBarcode/wiki/Options#text) | `undefined` | `String` |\n| [`fontOptions`](https://github.com/lindell/JsBarcode/wiki/Options#font-options) | `\"\"` | `String` |\n| [`font`](https://github.com/lindell/JsBarcode/wiki/Options#font) | `\"monospace\"` | `String` |\n| [`textAlign`](https://github.com/lindell/JsBarcode/wiki/Options#text-align) | `\"center\"` | `String` |\n| [`textPosition`](https://github.com/lindell/JsBarcode/wiki/Options#text-position) | `\"bottom\"` | `String` |\n| [`textMargin`](https://github.com/lindell/JsBarcode/wiki/Options#text-margin) | `2` | `Number` |\n| [`fontSize`](https://github.com/lindell/JsBarcode/wiki/Options#font-size) | `20` | `Number` |\n| [`background`](https://github.com/lindell/JsBarcode/wiki/Options#background)  | `\"#ffffff\"` | `String (CSS color)` |\n| [`lineColor`](https://github.com/lindell/JsBarcode/wiki/Options#line-color) | `\"#000000\"` | `String (CSS color)` |\n| [`margin`](https://github.com/lindell/JsBarcode/wiki/Options#margins) | `10` | `Number` |\n| [`marginTop`](https://github.com/lindell/JsBarcode/wiki/Options#margins) | `undefined` | `Number` |\n| [`marginBottom`](https://github.com/lindell/JsBarcode/wiki/Options#margins) | `undefined` | `Number` |\n| [`marginLeft`](https://github.com/lindell/JsBarcode/wiki/Options#margins) | `undefined` | `Number` |\n| [`marginRight`](https://github.com/lindell/JsBarcode/wiki/Options#margins) | `undefined` | `Number` |\n| [`valid`](https://github.com/lindell/JsBarcode/wiki/Options#valid) | `function(valid){}` | `Function` |\n\nContributions and feedback:\n----\nWe :heart: contributions and feedback.\n\nIf you want to contribute, please check out the [CONTRIBUTING.md](https://github.com/lindell/JsBarcode/blob/master/CONTRIBUTING.md) file.\n\nIf you have any question or suggestion [create an issue](https://github.com/lindell/JsBarcode/issues/new) or ask about it in the [gitter chat](https://gitter.im/lindell/JsBarcode).\n\nBug reports should always be done with a [new issue](https://github.com/lindell/JsBarcode/issues/new).\n\nLicense:\n----\nJsBarcode is shared under the [MIT license](https://github.com/lindell/JsBarcode/blob/master/MIT-LICENSE.txt). This means you can modify and use it however you want, even for comercial use. But please give this the Github repo a :star: and write a small comment of how you are using JsBarcode in the [gitter chat](https://gitter.im/lindell/JsBarcode).\n\n\n\n[1]: https://cdn.jsdelivr.net/jsbarcode/3.5.8/JsBarcode.all.min.js \"jsdelivr all barcodes\"\n[2]: https://cdn.jsdelivr.net/jsbarcode/3.5.8/barcodes/JsBarcode.code128.min.js \"jsdelivr code128\"\n[3]: https://cdn.jsdelivr.net/jsbarcode/3.5.8/barcodes/JsBarcode.code39.min.js \"jsdelivr code39\"\n[4]: https://cdn.jsdelivr.net/jsbarcode/3.5.8/barcodes/JsBarcode.ean-upc.min.js \"jsdelivr ean/upc\"\n[5]: https://cdn.jsdelivr.net/jsbarcode/3.5.8/barcodes/JsBarcode.itf-14.min.js \"jsdelivr itf-14\"\n[6]: https://cdn.jsdelivr.net/jsbarcode/3.5.8/barcodes/JsBarcode.itf.min.js \"jsdelivr itf\"\n[7]: https://cdn.jsdelivr.net/jsbarcode/3.5.8/barcodes/JsBarcode.msi.min.js \"jsdelivr msi\"\n[8]: https://cdn.jsdelivr.net/jsbarcode/3.5.8/barcodes/JsBarcode.pharmacode.min.js \"jsdelivr pharmacode\"\n[9]: https://cdn.jsdelivr.net/jsbarcode/3.5.8/barcodes/JsBarcode.codabar.min.js \"jsdelivr codabar\"\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lindell/JsBarcode.git"
  },
  "scripts": {
    "build": "gulp compile",
    "coverage": "mocha test/node/ -r blanket -R html-cov > test/coverage.html",
    "coveralls": "NODE_ENV=test YOURPACKAGE_COVERAGE=1 ./node_modules/.bin/mocha test/node/ --require blanket --reporter mocha-lcov-reporter | ./node_modules/coveralls/bin/coveralls.js",
    "test": "gulp babel && node_modules/mocha/bin/mocha test/node/ -R spec"
  },
  "typings": "./jsbarcode.d.ts",
  "version": "3.8.0"
}
